'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var path = require('path');
var buildConfigChain = _interopDefault(require('babel-core/lib/transformation/file/options/build-config-chain'));

// taken from https://github.com/zeit/next.js/blob/b220193167069acf9641b02d31437c8bf741a5df/server/build/babel/find-config.js

function findBabelConfig(dir) {
  // We need to provide a location of a filename inside the `dir`.
  // For the name of the file, we could be provide anything.
  const filename = path.join(dir, 'filename.js');
  const options = { babelrc: true, filename };

  // First We need to build the config chain.
  // Then we need to remove the config item with the location as "base".
  // That's the config we are passing as the "options" below
  const configList = buildConfigChain(options).filter(i => i.loc !== 'base');

  return configList[0]
}

module.exports = findBabelConfig;
